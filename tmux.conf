unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

set -g allow-rename off
set -g mouse on

set -g base-index 1
setw -g pane-base-index 1

set -s escape-time 0

# Smart pane switching with awareness of vim splits, tmux panes, and FZF windows
not_tmux='`echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"` || `echo "#{pane_start_command}" | grep -iqE "fzf"` || `echo "#{pane_current_command}" | grep -iqE "fzf"`'
bind-key -n C-h if-shell "$not_tmux" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$not_tmux" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$not_tmux" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$not_tmux" "send-keys C-l" "select-pane -R"
bind-key -n C-\\ if-shell "$not_tmux" "send-keys C-\\" "select-pane -l"

# Key bindings to resize panes
bind -r < resize-pane -L 10
bind -r > resize-pane -R 10
bind -r _ resize-pane -D 10
bind -r + resize-pane -U 10

# Open new panes at current directory
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -c "#{pane_current_path}"
unbind %
unbind '"'

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'seebi/tmux-colors-solarized'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'

# Plugin configurations

# Solarized colorscheme
set -g @colors-solarized $BACKGROUND

# Resurrect
set -g @resurrect-strategy-nvim 'session'

# Sidebar
set -g @sidebar-tree-command 'tree -C'

# Initialize TMUX plugin manager
run -b '~/.tmux/plugins/tpm/tpm'

# Use vi mode for status and mode keys
set -g mode-keys vi
set -g status-keys vi

# Colorscheme modifications
set -g pane-active-border-style fg=cyan

# Status bar
set -g status-right-length 1000
set -g status-left-length 1000

if-shell "if [[ -e $HOME/.velocity ]]; then true; else false; fi" \
"set -g status-right '#(python3 $HOME/.velocity/velocity.py TMUXSTATUSRIGHT)'" \
"set -g status-right '#{?client_prefix,PREFIX,} | #{pane_current_command} '"

if-shell "if [[ -e $HOME/.velocity ]]; then true; else false; fi" \
"set -g status-left '#(python3 $HOME/.velocity/velocity.py TMUXSTATUSLEFT)'" \
"set -g status-left ' #{host} | #{session_name} | '"

set -g window-status-format '[#I:#W]'
set -g window-status-current-format '[#I:#W]'
set -g window-status-style 'fg=yellow'
if-shell "if [[ $BACKGROUND == 'light' ]]; then true; else false; fi" \
"set -g window-status-current-style 'fg=red,bg=brightwhite'" \
"set -g window-status-current-style 'fg=red,bg=brightblack'"

# Velocity
# defaults
set -g @NOSPOTIFY true
set -g @NOBATTERY true
set -g @SHORTDATE false
set -g @NOSONGTICK true
set -g @STATUSRIGHTAUTOSCALE false
set -g @AUTOSCALECUTOFF 150
set -g @SPOTIFYFIELDLENGTH 20
