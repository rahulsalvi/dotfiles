priority 1

# Overrides
# ---------

# MIT License
snippet mit "MIT License" b
# The MIT License (MIT)

# Copyright (c) 2016 Rahul Salvi

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
endsnippet

# TODO message with username and date/time
snippet TODO "TODO message"
# TODO `echo $USER` `date "+%m-%d-%Y %H:%M"` $0
endsnippet

# Preprocessor Commands
# ---------------------

snippet #! "Shebang 2"
#!/usr/bin/env python
endsnippet

snippet #!3 "Shebang 3"
#!/usr/bin/env python3
endsnippet

snippet imp "import" b
import $0
endsnippet

snippet impa "import as" b
import ${1:package} as ${0:name}
endsnippet

snippet from "from-style import" b
from ${1:package} import ${0:module}
endsnippet

# Control Flow
# ------------

snippet if "if statement"
if ${1:condition}:
	$0
endsnippet

snippet else "else statement"
else:
	$0
endsnippet

snippet elif "else if statement"
else if ${1:condition}:
	$0
endsnippet

snippet ret "return statement"
return $0
endsnippet

snippet with "with statement"
with ${1:expression} as ${2:variable}:
	$0
endsnippet

snippet try "try-except statement"
try:
	$1
except ${2:exception}:
	$0
endsnippet

snippet finally "finally"
finally:
	$0
endsnippet

# Loops
# -----

snippet for "for loop"
for ${1:variable} in ${2:iterable}:
	$0
endsnippet

snippet fori "indexed for loop"
for ${1:i} in range(0, ${2:range}):
	$0
endsnippet

snippet while "while loop"
while ${1:condition}:
	$0
endsnippet

# Functions
# ---------

snippet main "main" b
if __name__ == "__main__":
	$0
endsnippet

snippet func "function" b
def ${1:name}(${2:parameters}):
	$0
endsnippet

snippet mfun "class member function"
def ${1:name}(self, ${2:parameters}):
	$0
endsnippet

# Types
# -----

snippet class "class"
class ${1:name}:
	${2:members}
	def __init__(self):
		$0
endsnippet
